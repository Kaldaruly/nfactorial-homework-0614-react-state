[{"/Users/ernar/Desktop/NFactorial/my-app/homework-todo/src/index.js":"1","/Users/ernar/Desktop/NFactorial/my-app/homework-todo/src/App.js":"2"},{"size":232,"mtime":1655380865870,"results":"3","hashOfConfig":"4"},{"size":4625,"mtime":1655578301928,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n8pe92",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Users/ernar/Desktop/NFactorial/my-app/homework-todo/src/index.js",[],[],"/Users/ernar/Desktop/NFactorial/my-app/homework-todo/src/App.js",["13"],[],"import { set } from \"date-fns\";\nimport { useEffect, useState } from \"react\";\nimport { v4 as ID } from \"uuid\";\nimport \"./App.css\";\n\nconst buttons = [\n  {\n    type: \"all\",\n    label: \"All\",\n  },\n  {\n    type: \"active\",\n    label: \"Active\",\n  },\n  {\n    type: \"done\",\n    label: \"Done\",\n  },\n];\n\n\nfunction App() {\n  const newItem = () =>{\n    let items = localStorage.getItem('items');\n\n    if(items){\n      return JSON.parse(items);\n    }else return [];\n  }\n  const [itemToAdd, setItemToAdd] = useState(\"\");\n  const [itemToSearch, setItemToSearch] = useState(\"\");\n  const [items, setItems] = useState(newItem);\n  const [filterType, setFilterType] = useState(\"\");\n\n  useEffect(() =>{\n    localStorage.setItem('items', JSON.stringify(items))\n  }, [items])\n\n  const handleChangeItem = (event) => {\n    setItemToAdd(event.target.value);\n  };\n\n  const handleAddItem = () => {\n    setItems((prevItems) => [\n      { label: itemToAdd, key: ID() },\n      ...prevItems,\n    ]);\n\n    setItemToAdd(\"\");\n\n    localStorage.setItem('items', JSON.stringify(itemToAdd));\n    localStorage.getItem('items');\n  };\n\n  const handleItemDone = ({ key }) => {\n    setItems((prevItems) =>\n      prevItems.map((item) => {\n        if (item.key === key) {\n          return { ...item, done: !item.done };\n        } else return item;\n      })\n    );\n  };\n\n  const handleDeleteItem = ({key}) =>{\n    setItems((prev) => prev.filter((item) => item.key !== key));\n  }\n\n  const handleImportant = ({ key }) =>{\n    setItems((p) => p.map((item) => {\n      if(item.key === key) return {...item,change: !item.change}\n      else return item;\n    }))\n  }\n\n  const handleSearchItem = (event) =>{\n      setItemToSearch(event.target.value);\n  }\n\n  const handleFilterItems = (type) => {\n    setFilterType(type);\n  };\n\n  \n\n  const amountDone = items.filter((item) => item.done).length;\n\n  const amountLeft = items.length - amountDone;\n\n  const filteredItems =\n    !filterType || filterType === \"all\"\n      ? items\n      : filterType === \"active\"\n      ? items.filter((item) => !item.done)\n      : items.filter((item) => item.done);\n\n  return (\n    <div className=\"todo-app\">\n      {/* App-header */}\n      <div className=\"app-header d-flex\">\n        <h1>Todo List</h1>\n        <h2>\n          {amountLeft} more to do, {amountDone} done\n        </h2>\n      </div>\n\n      <div className=\"top-panel d-flex\">\n        {/* Search-panel */}\n        <input\n          type=\"text\"\n          className=\"form-control search-input\"\n          placeholder=\"type to search\"\n          onChange={handleSearchItem}\n        />\n        {/* Item-status-filter */}\n        <div className=\"btn-group\">\n          {buttons.map((item) => (\n            <button\n              onClick={() => handleFilterItems(item.type)}\n              key={item.type}\n              type=\"button\"\n              className={`btn btn-${\n                filterType !== item.type ? \"outline-\" : \"\"\n              }info`}\n            >\n              {item.label}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <ul className=\"list-group todo-list\">\n        {filteredItems.length > 0 && filteredItems.filter(item => item.label.includes(itemToSearch)).map((item) => (\n            <li key={item.key} className=\"list-group-item\">\n              <span className={`todo-list-item${item.done ? \" done\" : \"\"}`}>\n                <span\n                  className={`todo-list-item-label ${!item.change ? \"\" : \"text-warning\"}`}\n                  onClick={() => handleItemDone(item)}\n                >\n                  {item.label}\n                </span>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-success btn-sm float-right\"\n                  onClick={() => handleImportant(item)}\n                >\n                  <i className=\"fa fa-exclamation\" />\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-danger btn-sm float-right\"\n                  onClick={() => handleDeleteItem(item)}\n                >\n                  <i className=\"fa fa-trash-o\" />\n                </button>\n              </span>\n            </li>\n          ))}\n      </ul>\n\n      {/* Add form */}\n      <div className=\"item-add-form d-flex\">\n        <input\n          value={itemToAdd}\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"What needs to be done\"\n          onChange={handleChangeItem}\n        />\n        <button className=\"btn btn-outline-secondary\" onClick={handleAddItem}>\n          Add item\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"14","severity":1,"message":"15","line":1,"column":10,"nodeType":"16","messageId":"17","endLine":1,"endColumn":13},"no-unused-vars","'set' is defined but never used.","Identifier","unusedVar"]